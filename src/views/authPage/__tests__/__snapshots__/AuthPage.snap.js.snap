exports[`test <AuthPage /> component renders correctly 1`] = `
<section
  className="auth">
  <form
    className="login"
    onSubmit={[Function]}>
    <fieldset
      className="form_group">
      <div>
        <div>
          <function Field(props, context) {
                _classCallCheck(this, Field);
          
                var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, props, context));
          
                if (!context._reduxForm) {
                  throw new Error('Field must be inside a component decorated with reduxForm()');
                }
          
                _this.normalize = _this.normalize.bind(_this);
                return _this;
              }
            className="input_name"
            component={[Function]}
            name="username"
            onFocus={true}
            placeholder="Имя..."
            type="text" />
        </div>
      </div>
      <div
        className="check_container">
        <div
          className="round_checkbox">
          <function Field(props, context) {
                _classCallCheck(this, Field);
          
                var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, props, context));
          
                if (!context._reduxForm) {
                  throw new Error('Field must be inside a component decorated with reduxForm()');
                }
          
                _this.normalize = _this.normalize.bind(_this);
                return _this;
              }
            component="input"
            id="master"
            name="master"
            type="checkbox" />
          <label
            htmlFor="master">
            <h3
              className="label_h3">
              Ведущий
            </h3>
          </label>
        </div>
        <div
          className="round_checkbox">
          <function Field(props, context) {
                _classCallCheck(this, Field);
          
                var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, props, context));
          
                if (!context._reduxForm) {
                  throw new Error('Field must be inside a component decorated with reduxForm()');
                }
          
                _this.normalize = _this.normalize.bind(_this);
                return _this;
              }
            component="input"
            id="remember"
            name="remember"
            type="checkbox" />
          <label
            htmlFor="remember">
            <h3
              className="label_h3">
              Запомнить
            </h3>
          </label>
        </div>
      </div>
      <button
        className="btn"
        type="submit">
        Войти
      </button>
    </fieldset>
  </form>
</section>
`;
